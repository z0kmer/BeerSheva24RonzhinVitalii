AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Timeout: 20
    Runtime: java21
    MemorySize: 512
    Architectures:
      - x86_64
Resources:
  JumpRecognizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: jump-pulse-recognizer
      Handler: telran.monitoring.App::handleRequest
      Policies:
        - Statement:
          - Effect: Allow
            Resource: '*' 
            Action:
            - dynamodb:*
      Environment:
        Variables:
          LOGGER_LEVEL: finest
          STREAM_NAME: !Ref JumpDataStream
          STREAM_CLASS_NAME: telran.monitoring.DynamoDbStreamJumpPulseData
      Events:
        DynamoDbItemInsert:
          Type: DynamoDB
          Properties:
            StartingPosition: LATEST
            BatchSize: 1
            Stream: !GetAtt PulseValuesStream.StreamArn
            FilterCriteria:
              Filters:
              - Pattern: '{"eventName": ["INSERT"]}'
  PulseValuesReducerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pulse-values-reducer
      Handler: telran.monitoring.AppReducer::handleRequest
      Policies:
        - Statement:
          - Effect: Allow
            Resource: '*' 
            Action:
            - dynamodb:*
      Environment:
        Variables:
          LOGGER_LEVEL: finest
          STREAM_NAME: !Ref AvgValuesDataStream
          REDUCING_SIZE: 5
          REDUCING_TIME_WINDOW: 600000
          STREAM_CLASS_NAME: telran.monitoring.DynamoDbStreamSensorData
      Events:
        DynamoDbItemInsert:
          Type: DynamoDB
          Properties:
            StartingPosition: LATEST
            BatchSize: 1
            Stream: !GetAtt PulseValuesStream.StreamArn
            FilterCriteria:
              Filters:
              - Pattern: '{"eventName": ["INSERT"]}'
            
  PulseValuesStream:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: pulse_values
      KeySchema:
        - AttributeName: patientId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: patientId
          AttributeType: N
        - AttributeName: timestamp
          AttributeType: N
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE
  JumpDataStream:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: patientId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: patientId
          AttributeType: N
        - AttributeName: timestamp
          AttributeType: N     
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE
  AvgValuesDataStream:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: patientId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: patientId
          AttributeType: N
        - AttributeName: timestamp
          AttributeType: N     
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE        
  AbnormalValuesDataStream:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: patientId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: patientId
          AttributeType: N
        - AttributeName: timestamp
          AttributeType: N     
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE 
  PulseAbnormalValuesRecognizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: abnormal-values-recognizer
      Handler: telran.monitoring.AppAbnormalRecognizer::handleRequest
      FunctionName: abnormal-values-recognizer
      Policies:
        - Statement:
          - Effect: Allow
            Resource: '*' 
            Action:
            - dynamodb:*
      Environment:
        Variables:
          LOGGER_LEVEL: finest
          STREAM_NAME: !Ref AbnormalValuesDataStream
          RANGE_PROVIDER_CLASS: telran.monitoring.RangeProviderClientHttp
          STREAM_CLASS_NAME: telran.monitoring.DynamoDbAbnormalPulseValueStream
          RANGE_PROVIDER_URL: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/range/"
      Events:
        DynamoDbItemInsert:
          Type: DynamoDB
          Properties:
            StartingPosition: LATEST
            BatchSize: 1
            Stream: !GetAtt PulseValuesStream.StreamArn
            FilterCriteria:
              Filters:
              - Pattern: '{"eventName": ["INSERT"]}'      
  RangeDataProviderFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: range-data-provider
      Handler: telran.monitoring.AppRangeDataProvider::handleRequest
      
      Environment: 
        Variables:
          DB_PASSWORD: 12345.Com
      Events:
        RangeDataProvider:
          Type: Api 
          Properties:
            Path: /range
            Method: get

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  RangeDataProviderApi:
    Description: "API Gateway endpoint URL for Prod stage for Range Data Provider Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/range/"
          
          

      
        
  